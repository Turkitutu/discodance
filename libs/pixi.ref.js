const Pixi = PIXI;
Pixi.loaders = Pixi.$loaders;
Pixi.loaders.Loader = Pixi.loaders.$Loader;
Pixi.loaders.Loader.prototype.destroy = Pixi.loaders.Loader.prototype.$destroy;
Pixi.loaders.Loader.prototype.emit = Pixi.loaders.Loader.prototype.$emit;
Pixi.loaders.Loader.prototype.on = Pixi.loaders.Loader.prototype.$on;
Pixi.loaders.Loader.prototype.once = Pixi.loaders.Loader.prototype.$once;
Pixi.loaders.Loader.prototype.off = Pixi.loaders.Loader.prototype.$off;
Pixi.loaders.Loader.prototype.add = Pixi.loaders.Loader.prototype.$add;
Pixi.loaders.Loader.prototype.pre = Pixi.loaders.Loader.prototype.$pre;
Pixi.loaders.Loader.prototype.use = Pixi.loaders.Loader.prototype.$use;
Pixi.loaders.Loader.prototype.reset = Pixi.loaders.Loader.prototype.$reset;
Pixi.loaders.Loader.prototype.load = Pixi.loaders.Loader.prototype.$load;
Pixi.loaders.shared = Pixi.loaders.$shared;
Pixi.loaders.shared.progress = Pixi.loaders.shared.$progress;
Pixi.loaders.shared.resources = Pixi.loaders.shared.$resources;
Pixi.loaders.shared.onStart = Pixi.loaders.shared.$onStart;
Pixi.loaders.shared._events = Pixi.loaders.shared.$_events;
Pixi.loaders.shared.destroy = Pixi.loaders.shared.$destroy;
Pixi.loader = Pixi.$loader;
Object.defineProperty(Pixi, "settings", Object.getOwnPropertyDescriptor(Pixi, "settings"));
Pixi.settings.TARGET_FPMS = Pixi.settings.$TARGET_FPMS;
Object.defineProperty(Pixi, "utils", Object.getOwnPropertyDescriptor(Pixi, "utils"));
Object.defineProperty(Pixi, "ticker", Object.getOwnPropertyDescriptor(Pixi, "ticker"));
Pixi.ticker.shared = Pixi.ticker.$shared;
Pixi.ticker.shared.speed = Pixi.ticker.shared.$speed;
Pixi.ticker.shared.destroy = Pixi.ticker.shared.$destroy;
Pixi.ticker.Ticker = Pixi.ticker.$Ticker;
Pixi.ticker.Ticker.prototype.add = Pixi.ticker.Ticker.prototype.$add;
Pixi.ticker.Ticker.prototype.remove = Pixi.ticker.Ticker.prototype.$remove;
Pixi.ticker.Ticker.prototype.destroy = Pixi.ticker.Ticker.prototype.$destroy;
Pixi.ticker.Ticker.prototype.update = Pixi.ticker.Ticker.prototype.$update;
Object.defineProperty(Pixi, "Container", Object.getOwnPropertyDescriptor(Pixi, "Container"));
Pixi.Container.prototype.addChild = Pixi.Container.prototype.$addChild;
Pixi.Container.prototype.removeChild = Pixi.Container.prototype.$removeChild;
Pixi.Container.prototype.destroy = Pixi.Container.prototype.$destroy;
Object.defineProperty(Pixi.Container.prototype, "width", Object.getOwnPropertyDescriptor(Pixi.Container.prototype, "width"));
Object.defineProperty(Pixi.Container.prototype, "height", Object.getOwnPropertyDescriptor(Pixi.Container.prototype, "height"));
Object.defineProperty(Pixi, "Sprite", Object.getOwnPropertyDescriptor(Pixi, "Sprite"));
Pixi.Sprite.prototype.destroy = Pixi.Sprite.prototype.$destroy;
Object.defineProperty(Pixi.Sprite.prototype, "width", Object.getOwnPropertyDescriptor(Pixi.Sprite.prototype, "width"));
Object.defineProperty(Pixi.Sprite.prototype, "height", Object.getOwnPropertyDescriptor(Pixi.Sprite.prototype, "height"));
Object.defineProperty(Pixi.Sprite.prototype, "texture", Object.getOwnPropertyDescriptor(Pixi.Sprite.prototype, "texture"));
Object.defineProperty(Pixi, "Text", Object.getOwnPropertyDescriptor(Pixi, "Text"));
Pixi.Text.prototype.destroy = Pixi.Text.prototype.$destroy;
Object.defineProperty(Pixi.Text.prototype, "width", Object.getOwnPropertyDescriptor(Pixi.Text.prototype, "width"));
Object.defineProperty(Pixi.Text.prototype, "height", Object.getOwnPropertyDescriptor(Pixi.Text.prototype, "height"));
Object.defineProperty(Pixi.Text.prototype, "style", Object.getOwnPropertyDescriptor(Pixi.Text.prototype, "style"));
Object.defineProperty(Pixi.Text.prototype, "text", Object.getOwnPropertyDescriptor(Pixi.Text.prototype, "text"));
Object.defineProperty(Pixi, "Graphics", Object.getOwnPropertyDescriptor(Pixi, "Graphics"));
Pixi.Graphics.prototype.lineStyle = Pixi.Graphics.prototype.$lineStyle;
Pixi.Graphics.prototype.moveTo = Pixi.Graphics.prototype.$moveTo;
Pixi.Graphics.prototype.lineTo = Pixi.Graphics.prototype.$lineTo;
Pixi.Graphics.prototype.clear = Pixi.Graphics.prototype.$clear;
Pixi.Graphics.prototype.destroy = Pixi.Graphics.prototype.$destroy;
Object.defineProperty(Pixi, "Texture", Object.getOwnPropertyDescriptor(Pixi, "Texture"));
Pixi.Texture.prototype.update = Pixi.Texture.prototype.$update;
Pixi.Texture.prototype.destroy = Pixi.Texture.prototype.$destroy;
Object.defineProperty(Pixi.Texture.prototype, "frame", Object.getOwnPropertyDescriptor(Pixi.Texture.prototype, "frame"));
Object.defineProperty(Pixi.Texture.prototype, "width", Object.getOwnPropertyDescriptor(Pixi.Texture.prototype, "width"));
Object.defineProperty(Pixi.Texture.prototype, "height", Object.getOwnPropertyDescriptor(Pixi.Texture.prototype, "height"));
Object.defineProperty(Pixi, "Application", Object.getOwnPropertyDescriptor(Pixi, "Application"));
Pixi.Application.prototype.render = Pixi.Application.prototype.$render;
Pixi.Application.prototype.destroy = Pixi.Application.prototype.$destroy;
Object.defineProperty(Pixi.Application.prototype, "ticker", Object.getOwnPropertyDescriptor(Pixi.Application.prototype, "ticker"));
Object.defineProperty(Pixi.Application.prototype, "view", Object.getOwnPropertyDescriptor(Pixi.Application.prototype, "view"));
Object.defineProperty(Pixi.Application.prototype, "loader", Object.getOwnPropertyDescriptor(Pixi.Application.prototype, "loader"));
Object.defineProperty(Pixi, "Point", Object.getOwnPropertyDescriptor(Pixi, "Point"));
Pixi.Point.prototype.set = Pixi.Point.prototype.$set;
Object.defineProperty(Pixi, "ObservablePoint", Object.getOwnPropertyDescriptor(Pixi, "ObservablePoint"));
Pixi.ObservablePoint.prototype.set = Pixi.ObservablePoint.prototype.$set;
Object.defineProperty(Pixi.ObservablePoint.prototype, "x", Object.getOwnPropertyDescriptor(Pixi.ObservablePoint.prototype, "x"));
Object.defineProperty(Pixi.ObservablePoint.prototype, "y", Object.getOwnPropertyDescriptor(Pixi.ObservablePoint.prototype, "y"));
Object.defineProperty(Pixi, "Rectangle", Object.getOwnPropertyDescriptor(Pixi, "Rectangle"));
Pixi.Rectangle.prototype.pad = Pixi.Rectangle.prototype.$pad;
Object.defineProperty(Pixi.Rectangle.prototype, "left", Object.getOwnPropertyDescriptor(Pixi.Rectangle.prototype, "left"));
Object.defineProperty(Pixi.Rectangle.prototype, "right", Object.getOwnPropertyDescriptor(Pixi.Rectangle.prototype, "right"));
Object.defineProperty(Pixi.Rectangle.prototype, "top", Object.getOwnPropertyDescriptor(Pixi.Rectangle.prototype, "top"));
Object.defineProperty(Pixi.Rectangle.prototype, "bottom", Object.getOwnPropertyDescriptor(Pixi.Rectangle.prototype, "bottom"));
Object.defineProperty(Pixi, "TARGET_FPMS", Object.getOwnPropertyDescriptor(Pixi, "TARGET_FPMS"));
module.exports = Pixi;